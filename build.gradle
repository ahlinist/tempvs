buildscript {
    repositories {
        mavenLocal()

        maven {
            url "https://repo.grails.org/grails/core"
        }
    }

    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.15.1"
    }
}

version "0.1"
group "tempvs"

apply plugin:"idea"
apply plugin:"org.grails.grails-web"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.grails-gsp"
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

repositories {
    mavenLocal()

    maven {
        url "https://repo.grails.org/grails/core"
    }
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Edgware.SR5'
    }
}

dependencies {
    compile 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    compile "org.grails:grails-core"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails.plugins:gsp"
    compile "com.bertramlabs.plugins:asset-pipeline-grails:2.15.1"
    testCompile "org.grails:grails-test-mixins:3.3.0.RC1"
    testCompile "org.grails:grails-web-testing-support"
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

assets {
    minifyJs = true
    minifyCss = true
}

task stage() {
    dependsOn clean, assemble
}

assemble.mustRunAfter clean

tasks.stage.doLast() {
    delete fileTree(dir: "build", exclude: "libs/*.jar")
}

jar {
    baseName = 'tempvs'
    version = '1.0.0'
}
